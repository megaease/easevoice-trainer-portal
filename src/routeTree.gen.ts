/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as EasevoiceRouteImport } from './routes/easevoice/route'
import { Route as EasevoiceIndexImport } from './routes/easevoice/index'
import { Route as EasevoiceModelTrainingRouteImport } from './routes/easevoice/model-training/route'
import { Route as EasevoiceModelTrainingIndexImport } from './routes/easevoice/model-training/index'
import { Route as EasevoiceDashboardIndexImport } from './routes/easevoice/dashboard/index'
import { Route as EasevoiceModelTrainingEaseModeImport } from './routes/easevoice/model-training/ease-mode'
import { Route as EasevoiceModelTrainingAdvancedModeImport } from './routes/easevoice/model-training/advanced-mode'

// Create Virtual Routes

const EasevoiceVoiceCloneIndexLazyImport = createFileRoute(
  '/easevoice/voice-clone/',
)()
const EasevoiceAboutIndexLazyImport = createFileRoute('/easevoice/about/')()

// Create/Update Routes

const EasevoiceRouteRoute = EasevoiceRouteImport.update({
  id: '/easevoice',
  path: '/easevoice',
  getParentRoute: () => rootRoute,
} as any)

const EasevoiceIndexRoute = EasevoiceIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => EasevoiceRouteRoute,
} as any)

const EasevoiceModelTrainingRouteRoute =
  EasevoiceModelTrainingRouteImport.update({
    id: '/model-training',
    path: '/model-training',
    getParentRoute: () => EasevoiceRouteRoute,
  } as any)

const EasevoiceVoiceCloneIndexLazyRoute =
  EasevoiceVoiceCloneIndexLazyImport.update({
    id: '/voice-clone/',
    path: '/voice-clone/',
    getParentRoute: () => EasevoiceRouteRoute,
  } as any).lazy(() =>
    import('./routes/easevoice/voice-clone/index.lazy').then((d) => d.Route),
  )

const EasevoiceAboutIndexLazyRoute = EasevoiceAboutIndexLazyImport.update({
  id: '/about/',
  path: '/about/',
  getParentRoute: () => EasevoiceRouteRoute,
} as any).lazy(() =>
  import('./routes/easevoice/about/index.lazy').then((d) => d.Route),
)

const EasevoiceModelTrainingIndexRoute =
  EasevoiceModelTrainingIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => EasevoiceModelTrainingRouteRoute,
  } as any)

const EasevoiceDashboardIndexRoute = EasevoiceDashboardIndexImport.update({
  id: '/dashboard/',
  path: '/dashboard/',
  getParentRoute: () => EasevoiceRouteRoute,
} as any)

const EasevoiceModelTrainingEaseModeRoute =
  EasevoiceModelTrainingEaseModeImport.update({
    id: '/ease-mode',
    path: '/ease-mode',
    getParentRoute: () => EasevoiceModelTrainingRouteRoute,
  } as any)

const EasevoiceModelTrainingAdvancedModeRoute =
  EasevoiceModelTrainingAdvancedModeImport.update({
    id: '/advanced-mode',
    path: '/advanced-mode',
    getParentRoute: () => EasevoiceModelTrainingRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/easevoice': {
      id: '/easevoice'
      path: '/easevoice'
      fullPath: '/easevoice'
      preLoaderRoute: typeof EasevoiceRouteImport
      parentRoute: typeof rootRoute
    }
    '/easevoice/model-training': {
      id: '/easevoice/model-training'
      path: '/model-training'
      fullPath: '/easevoice/model-training'
      preLoaderRoute: typeof EasevoiceModelTrainingRouteImport
      parentRoute: typeof EasevoiceRouteImport
    }
    '/easevoice/': {
      id: '/easevoice/'
      path: '/'
      fullPath: '/easevoice/'
      preLoaderRoute: typeof EasevoiceIndexImport
      parentRoute: typeof EasevoiceRouteImport
    }
    '/easevoice/model-training/advanced-mode': {
      id: '/easevoice/model-training/advanced-mode'
      path: '/advanced-mode'
      fullPath: '/easevoice/model-training/advanced-mode'
      preLoaderRoute: typeof EasevoiceModelTrainingAdvancedModeImport
      parentRoute: typeof EasevoiceModelTrainingRouteImport
    }
    '/easevoice/model-training/ease-mode': {
      id: '/easevoice/model-training/ease-mode'
      path: '/ease-mode'
      fullPath: '/easevoice/model-training/ease-mode'
      preLoaderRoute: typeof EasevoiceModelTrainingEaseModeImport
      parentRoute: typeof EasevoiceModelTrainingRouteImport
    }
    '/easevoice/dashboard/': {
      id: '/easevoice/dashboard/'
      path: '/dashboard'
      fullPath: '/easevoice/dashboard'
      preLoaderRoute: typeof EasevoiceDashboardIndexImport
      parentRoute: typeof EasevoiceRouteImport
    }
    '/easevoice/model-training/': {
      id: '/easevoice/model-training/'
      path: '/'
      fullPath: '/easevoice/model-training/'
      preLoaderRoute: typeof EasevoiceModelTrainingIndexImport
      parentRoute: typeof EasevoiceModelTrainingRouteImport
    }
    '/easevoice/about/': {
      id: '/easevoice/about/'
      path: '/about'
      fullPath: '/easevoice/about'
      preLoaderRoute: typeof EasevoiceAboutIndexLazyImport
      parentRoute: typeof EasevoiceRouteImport
    }
    '/easevoice/voice-clone/': {
      id: '/easevoice/voice-clone/'
      path: '/voice-clone'
      fullPath: '/easevoice/voice-clone'
      preLoaderRoute: typeof EasevoiceVoiceCloneIndexLazyImport
      parentRoute: typeof EasevoiceRouteImport
    }
  }
}

// Create and export the route tree

interface EasevoiceModelTrainingRouteRouteChildren {
  EasevoiceModelTrainingAdvancedModeRoute: typeof EasevoiceModelTrainingAdvancedModeRoute
  EasevoiceModelTrainingEaseModeRoute: typeof EasevoiceModelTrainingEaseModeRoute
  EasevoiceModelTrainingIndexRoute: typeof EasevoiceModelTrainingIndexRoute
}

const EasevoiceModelTrainingRouteRouteChildren: EasevoiceModelTrainingRouteRouteChildren =
  {
    EasevoiceModelTrainingAdvancedModeRoute:
      EasevoiceModelTrainingAdvancedModeRoute,
    EasevoiceModelTrainingEaseModeRoute: EasevoiceModelTrainingEaseModeRoute,
    EasevoiceModelTrainingIndexRoute: EasevoiceModelTrainingIndexRoute,
  }

const EasevoiceModelTrainingRouteRouteWithChildren =
  EasevoiceModelTrainingRouteRoute._addFileChildren(
    EasevoiceModelTrainingRouteRouteChildren,
  )

interface EasevoiceRouteRouteChildren {
  EasevoiceModelTrainingRouteRoute: typeof EasevoiceModelTrainingRouteRouteWithChildren
  EasevoiceIndexRoute: typeof EasevoiceIndexRoute
  EasevoiceDashboardIndexRoute: typeof EasevoiceDashboardIndexRoute
  EasevoiceAboutIndexLazyRoute: typeof EasevoiceAboutIndexLazyRoute
  EasevoiceVoiceCloneIndexLazyRoute: typeof EasevoiceVoiceCloneIndexLazyRoute
}

const EasevoiceRouteRouteChildren: EasevoiceRouteRouteChildren = {
  EasevoiceModelTrainingRouteRoute:
    EasevoiceModelTrainingRouteRouteWithChildren,
  EasevoiceIndexRoute: EasevoiceIndexRoute,
  EasevoiceDashboardIndexRoute: EasevoiceDashboardIndexRoute,
  EasevoiceAboutIndexLazyRoute: EasevoiceAboutIndexLazyRoute,
  EasevoiceVoiceCloneIndexLazyRoute: EasevoiceVoiceCloneIndexLazyRoute,
}

const EasevoiceRouteRouteWithChildren = EasevoiceRouteRoute._addFileChildren(
  EasevoiceRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/easevoice': typeof EasevoiceRouteRouteWithChildren
  '/easevoice/model-training': typeof EasevoiceModelTrainingRouteRouteWithChildren
  '/easevoice/': typeof EasevoiceIndexRoute
  '/easevoice/model-training/advanced-mode': typeof EasevoiceModelTrainingAdvancedModeRoute
  '/easevoice/model-training/ease-mode': typeof EasevoiceModelTrainingEaseModeRoute
  '/easevoice/dashboard': typeof EasevoiceDashboardIndexRoute
  '/easevoice/model-training/': typeof EasevoiceModelTrainingIndexRoute
  '/easevoice/about': typeof EasevoiceAboutIndexLazyRoute
  '/easevoice/voice-clone': typeof EasevoiceVoiceCloneIndexLazyRoute
}

export interface FileRoutesByTo {
  '/easevoice': typeof EasevoiceIndexRoute
  '/easevoice/model-training/advanced-mode': typeof EasevoiceModelTrainingAdvancedModeRoute
  '/easevoice/model-training/ease-mode': typeof EasevoiceModelTrainingEaseModeRoute
  '/easevoice/dashboard': typeof EasevoiceDashboardIndexRoute
  '/easevoice/model-training': typeof EasevoiceModelTrainingIndexRoute
  '/easevoice/about': typeof EasevoiceAboutIndexLazyRoute
  '/easevoice/voice-clone': typeof EasevoiceVoiceCloneIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/easevoice': typeof EasevoiceRouteRouteWithChildren
  '/easevoice/model-training': typeof EasevoiceModelTrainingRouteRouteWithChildren
  '/easevoice/': typeof EasevoiceIndexRoute
  '/easevoice/model-training/advanced-mode': typeof EasevoiceModelTrainingAdvancedModeRoute
  '/easevoice/model-training/ease-mode': typeof EasevoiceModelTrainingEaseModeRoute
  '/easevoice/dashboard/': typeof EasevoiceDashboardIndexRoute
  '/easevoice/model-training/': typeof EasevoiceModelTrainingIndexRoute
  '/easevoice/about/': typeof EasevoiceAboutIndexLazyRoute
  '/easevoice/voice-clone/': typeof EasevoiceVoiceCloneIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/easevoice'
    | '/easevoice/model-training'
    | '/easevoice/'
    | '/easevoice/model-training/advanced-mode'
    | '/easevoice/model-training/ease-mode'
    | '/easevoice/dashboard'
    | '/easevoice/model-training/'
    | '/easevoice/about'
    | '/easevoice/voice-clone'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/easevoice'
    | '/easevoice/model-training/advanced-mode'
    | '/easevoice/model-training/ease-mode'
    | '/easevoice/dashboard'
    | '/easevoice/model-training'
    | '/easevoice/about'
    | '/easevoice/voice-clone'
  id:
    | '__root__'
    | '/easevoice'
    | '/easevoice/model-training'
    | '/easevoice/'
    | '/easevoice/model-training/advanced-mode'
    | '/easevoice/model-training/ease-mode'
    | '/easevoice/dashboard/'
    | '/easevoice/model-training/'
    | '/easevoice/about/'
    | '/easevoice/voice-clone/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  EasevoiceRouteRoute: typeof EasevoiceRouteRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  EasevoiceRouteRoute: EasevoiceRouteRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/easevoice"
      ]
    },
    "/easevoice": {
      "filePath": "easevoice/route.tsx",
      "children": [
        "/easevoice/model-training",
        "/easevoice/",
        "/easevoice/dashboard/",
        "/easevoice/about/",
        "/easevoice/voice-clone/"
      ]
    },
    "/easevoice/model-training": {
      "filePath": "easevoice/model-training/route.tsx",
      "parent": "/easevoice",
      "children": [
        "/easevoice/model-training/advanced-mode",
        "/easevoice/model-training/ease-mode",
        "/easevoice/model-training/"
      ]
    },
    "/easevoice/": {
      "filePath": "easevoice/index.tsx",
      "parent": "/easevoice"
    },
    "/easevoice/model-training/advanced-mode": {
      "filePath": "easevoice/model-training/advanced-mode.tsx",
      "parent": "/easevoice/model-training"
    },
    "/easevoice/model-training/ease-mode": {
      "filePath": "easevoice/model-training/ease-mode.tsx",
      "parent": "/easevoice/model-training"
    },
    "/easevoice/dashboard/": {
      "filePath": "easevoice/dashboard/index.tsx",
      "parent": "/easevoice"
    },
    "/easevoice/model-training/": {
      "filePath": "easevoice/model-training/index.tsx",
      "parent": "/easevoice/model-training"
    },
    "/easevoice/about/": {
      "filePath": "easevoice/about/index.lazy.tsx",
      "parent": "/easevoice"
    },
    "/easevoice/voice-clone/": {
      "filePath": "easevoice/voice-clone/index.lazy.tsx",
      "parent": "/easevoice"
    }
  }
}
ROUTE_MANIFEST_END */
