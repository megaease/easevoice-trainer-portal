/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LayoutRouteImport } from './routes/_layout/route'
import { Route as LayoutIndexImport } from './routes/_layout/index'
import { Route as LayoutModelTrainingIndexImport } from './routes/_layout/model-training/index'
import { Route as LayoutDashboardIndexImport } from './routes/_layout/dashboard/index'
import { Route as LayoutModelTrainingEaseModeImport } from './routes/_layout/model-training/ease-mode'
import { Route as LayoutModelTrainingAdvancedModeIndexImport } from './routes/_layout/model-training/advanced-mode/index'
import { Route as LayoutModelTrainingAdvancedModeStep2Import } from './routes/_layout/model-training/advanced-mode/step2'
import { Route as LayoutModelTrainingAdvancedModeStep1Import } from './routes/_layout/model-training/advanced-mode/step1'

// Create Virtual Routes

const LayoutModelTrainingRouteLazyImport = createFileRoute(
  '/_layout/model-training',
)()
const LayoutVoiceCloneIndexLazyImport = createFileRoute(
  '/_layout/voice-clone/',
)()
const LayoutAboutIndexLazyImport = createFileRoute('/_layout/about/')()
const LayoutModelTrainingAdvancedModeRouteLazyImport = createFileRoute(
  '/_layout/model-training/advanced-mode',
)()

// Create/Update Routes

const LayoutRouteRoute = LayoutRouteImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const LayoutIndexRoute = LayoutIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LayoutRouteRoute,
} as any)

const LayoutModelTrainingRouteLazyRoute =
  LayoutModelTrainingRouteLazyImport.update({
    id: '/model-training',
    path: '/model-training',
    getParentRoute: () => LayoutRouteRoute,
  } as any).lazy(() =>
    import('./routes/_layout/model-training/route.lazy').then((d) => d.Route),
  )

const LayoutVoiceCloneIndexLazyRoute = LayoutVoiceCloneIndexLazyImport.update({
  id: '/voice-clone/',
  path: '/voice-clone/',
  getParentRoute: () => LayoutRouteRoute,
} as any).lazy(() =>
  import('./routes/_layout/voice-clone/index.lazy').then((d) => d.Route),
)

const LayoutAboutIndexLazyRoute = LayoutAboutIndexLazyImport.update({
  id: '/about/',
  path: '/about/',
  getParentRoute: () => LayoutRouteRoute,
} as any).lazy(() =>
  import('./routes/_layout/about/index.lazy').then((d) => d.Route),
)

const LayoutModelTrainingIndexRoute = LayoutModelTrainingIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LayoutModelTrainingRouteLazyRoute,
} as any)

const LayoutDashboardIndexRoute = LayoutDashboardIndexImport.update({
  id: '/dashboard/',
  path: '/dashboard/',
  getParentRoute: () => LayoutRouteRoute,
} as any)

const LayoutModelTrainingAdvancedModeRouteLazyRoute =
  LayoutModelTrainingAdvancedModeRouteLazyImport.update({
    id: '/advanced-mode',
    path: '/advanced-mode',
    getParentRoute: () => LayoutModelTrainingRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/_layout/model-training/advanced-mode/route.lazy').then(
      (d) => d.Route,
    ),
  )

const LayoutModelTrainingEaseModeRoute =
  LayoutModelTrainingEaseModeImport.update({
    id: '/ease-mode',
    path: '/ease-mode',
    getParentRoute: () => LayoutModelTrainingRouteLazyRoute,
  } as any)

const LayoutModelTrainingAdvancedModeIndexRoute =
  LayoutModelTrainingAdvancedModeIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => LayoutModelTrainingAdvancedModeRouteLazyRoute,
  } as any)

const LayoutModelTrainingAdvancedModeStep2Route =
  LayoutModelTrainingAdvancedModeStep2Import.update({
    id: '/step2',
    path: '/step2',
    getParentRoute: () => LayoutModelTrainingAdvancedModeRouteLazyRoute,
  } as any)

const LayoutModelTrainingAdvancedModeStep1Route =
  LayoutModelTrainingAdvancedModeStep1Import.update({
    id: '/step1',
    path: '/step1',
    getParentRoute: () => LayoutModelTrainingAdvancedModeRouteLazyRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutRouteImport
      parentRoute: typeof rootRoute
    }
    '/_layout/model-training': {
      id: '/_layout/model-training'
      path: '/model-training'
      fullPath: '/model-training'
      preLoaderRoute: typeof LayoutModelTrainingRouteLazyImport
      parentRoute: typeof LayoutRouteImport
    }
    '/_layout/': {
      id: '/_layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LayoutIndexImport
      parentRoute: typeof LayoutRouteImport
    }
    '/_layout/model-training/ease-mode': {
      id: '/_layout/model-training/ease-mode'
      path: '/ease-mode'
      fullPath: '/model-training/ease-mode'
      preLoaderRoute: typeof LayoutModelTrainingEaseModeImport
      parentRoute: typeof LayoutModelTrainingRouteLazyImport
    }
    '/_layout/model-training/advanced-mode': {
      id: '/_layout/model-training/advanced-mode'
      path: '/advanced-mode'
      fullPath: '/model-training/advanced-mode'
      preLoaderRoute: typeof LayoutModelTrainingAdvancedModeRouteLazyImport
      parentRoute: typeof LayoutModelTrainingRouteLazyImport
    }
    '/_layout/dashboard/': {
      id: '/_layout/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof LayoutDashboardIndexImport
      parentRoute: typeof LayoutRouteImport
    }
    '/_layout/model-training/': {
      id: '/_layout/model-training/'
      path: '/'
      fullPath: '/model-training/'
      preLoaderRoute: typeof LayoutModelTrainingIndexImport
      parentRoute: typeof LayoutModelTrainingRouteLazyImport
    }
    '/_layout/about/': {
      id: '/_layout/about/'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof LayoutAboutIndexLazyImport
      parentRoute: typeof LayoutRouteImport
    }
    '/_layout/voice-clone/': {
      id: '/_layout/voice-clone/'
      path: '/voice-clone'
      fullPath: '/voice-clone'
      preLoaderRoute: typeof LayoutVoiceCloneIndexLazyImport
      parentRoute: typeof LayoutRouteImport
    }
    '/_layout/model-training/advanced-mode/step1': {
      id: '/_layout/model-training/advanced-mode/step1'
      path: '/step1'
      fullPath: '/model-training/advanced-mode/step1'
      preLoaderRoute: typeof LayoutModelTrainingAdvancedModeStep1Import
      parentRoute: typeof LayoutModelTrainingAdvancedModeRouteLazyImport
    }
    '/_layout/model-training/advanced-mode/step2': {
      id: '/_layout/model-training/advanced-mode/step2'
      path: '/step2'
      fullPath: '/model-training/advanced-mode/step2'
      preLoaderRoute: typeof LayoutModelTrainingAdvancedModeStep2Import
      parentRoute: typeof LayoutModelTrainingAdvancedModeRouteLazyImport
    }
    '/_layout/model-training/advanced-mode/': {
      id: '/_layout/model-training/advanced-mode/'
      path: '/'
      fullPath: '/model-training/advanced-mode/'
      preLoaderRoute: typeof LayoutModelTrainingAdvancedModeIndexImport
      parentRoute: typeof LayoutModelTrainingAdvancedModeRouteLazyImport
    }
  }
}

// Create and export the route tree

interface LayoutModelTrainingAdvancedModeRouteLazyRouteChildren {
  LayoutModelTrainingAdvancedModeStep1Route: typeof LayoutModelTrainingAdvancedModeStep1Route
  LayoutModelTrainingAdvancedModeStep2Route: typeof LayoutModelTrainingAdvancedModeStep2Route
  LayoutModelTrainingAdvancedModeIndexRoute: typeof LayoutModelTrainingAdvancedModeIndexRoute
}

const LayoutModelTrainingAdvancedModeRouteLazyRouteChildren: LayoutModelTrainingAdvancedModeRouteLazyRouteChildren =
  {
    LayoutModelTrainingAdvancedModeStep1Route:
      LayoutModelTrainingAdvancedModeStep1Route,
    LayoutModelTrainingAdvancedModeStep2Route:
      LayoutModelTrainingAdvancedModeStep2Route,
    LayoutModelTrainingAdvancedModeIndexRoute:
      LayoutModelTrainingAdvancedModeIndexRoute,
  }

const LayoutModelTrainingAdvancedModeRouteLazyRouteWithChildren =
  LayoutModelTrainingAdvancedModeRouteLazyRoute._addFileChildren(
    LayoutModelTrainingAdvancedModeRouteLazyRouteChildren,
  )

interface LayoutModelTrainingRouteLazyRouteChildren {
  LayoutModelTrainingEaseModeRoute: typeof LayoutModelTrainingEaseModeRoute
  LayoutModelTrainingAdvancedModeRouteLazyRoute: typeof LayoutModelTrainingAdvancedModeRouteLazyRouteWithChildren
  LayoutModelTrainingIndexRoute: typeof LayoutModelTrainingIndexRoute
}

const LayoutModelTrainingRouteLazyRouteChildren: LayoutModelTrainingRouteLazyRouteChildren =
  {
    LayoutModelTrainingEaseModeRoute: LayoutModelTrainingEaseModeRoute,
    LayoutModelTrainingAdvancedModeRouteLazyRoute:
      LayoutModelTrainingAdvancedModeRouteLazyRouteWithChildren,
    LayoutModelTrainingIndexRoute: LayoutModelTrainingIndexRoute,
  }

const LayoutModelTrainingRouteLazyRouteWithChildren =
  LayoutModelTrainingRouteLazyRoute._addFileChildren(
    LayoutModelTrainingRouteLazyRouteChildren,
  )

interface LayoutRouteRouteChildren {
  LayoutModelTrainingRouteLazyRoute: typeof LayoutModelTrainingRouteLazyRouteWithChildren
  LayoutIndexRoute: typeof LayoutIndexRoute
  LayoutDashboardIndexRoute: typeof LayoutDashboardIndexRoute
  LayoutAboutIndexLazyRoute: typeof LayoutAboutIndexLazyRoute
  LayoutVoiceCloneIndexLazyRoute: typeof LayoutVoiceCloneIndexLazyRoute
}

const LayoutRouteRouteChildren: LayoutRouteRouteChildren = {
  LayoutModelTrainingRouteLazyRoute:
    LayoutModelTrainingRouteLazyRouteWithChildren,
  LayoutIndexRoute: LayoutIndexRoute,
  LayoutDashboardIndexRoute: LayoutDashboardIndexRoute,
  LayoutAboutIndexLazyRoute: LayoutAboutIndexLazyRoute,
  LayoutVoiceCloneIndexLazyRoute: LayoutVoiceCloneIndexLazyRoute,
}

const LayoutRouteRouteWithChildren = LayoutRouteRoute._addFileChildren(
  LayoutRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof LayoutRouteRouteWithChildren
  '/model-training': typeof LayoutModelTrainingRouteLazyRouteWithChildren
  '/': typeof LayoutIndexRoute
  '/model-training/ease-mode': typeof LayoutModelTrainingEaseModeRoute
  '/model-training/advanced-mode': typeof LayoutModelTrainingAdvancedModeRouteLazyRouteWithChildren
  '/dashboard': typeof LayoutDashboardIndexRoute
  '/model-training/': typeof LayoutModelTrainingIndexRoute
  '/about': typeof LayoutAboutIndexLazyRoute
  '/voice-clone': typeof LayoutVoiceCloneIndexLazyRoute
  '/model-training/advanced-mode/step1': typeof LayoutModelTrainingAdvancedModeStep1Route
  '/model-training/advanced-mode/step2': typeof LayoutModelTrainingAdvancedModeStep2Route
  '/model-training/advanced-mode/': typeof LayoutModelTrainingAdvancedModeIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof LayoutIndexRoute
  '/model-training/ease-mode': typeof LayoutModelTrainingEaseModeRoute
  '/dashboard': typeof LayoutDashboardIndexRoute
  '/model-training': typeof LayoutModelTrainingIndexRoute
  '/about': typeof LayoutAboutIndexLazyRoute
  '/voice-clone': typeof LayoutVoiceCloneIndexLazyRoute
  '/model-training/advanced-mode/step1': typeof LayoutModelTrainingAdvancedModeStep1Route
  '/model-training/advanced-mode/step2': typeof LayoutModelTrainingAdvancedModeStep2Route
  '/model-training/advanced-mode': typeof LayoutModelTrainingAdvancedModeIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_layout': typeof LayoutRouteRouteWithChildren
  '/_layout/model-training': typeof LayoutModelTrainingRouteLazyRouteWithChildren
  '/_layout/': typeof LayoutIndexRoute
  '/_layout/model-training/ease-mode': typeof LayoutModelTrainingEaseModeRoute
  '/_layout/model-training/advanced-mode': typeof LayoutModelTrainingAdvancedModeRouteLazyRouteWithChildren
  '/_layout/dashboard/': typeof LayoutDashboardIndexRoute
  '/_layout/model-training/': typeof LayoutModelTrainingIndexRoute
  '/_layout/about/': typeof LayoutAboutIndexLazyRoute
  '/_layout/voice-clone/': typeof LayoutVoiceCloneIndexLazyRoute
  '/_layout/model-training/advanced-mode/step1': typeof LayoutModelTrainingAdvancedModeStep1Route
  '/_layout/model-training/advanced-mode/step2': typeof LayoutModelTrainingAdvancedModeStep2Route
  '/_layout/model-training/advanced-mode/': typeof LayoutModelTrainingAdvancedModeIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/model-training'
    | '/'
    | '/model-training/ease-mode'
    | '/model-training/advanced-mode'
    | '/dashboard'
    | '/model-training/'
    | '/about'
    | '/voice-clone'
    | '/model-training/advanced-mode/step1'
    | '/model-training/advanced-mode/step2'
    | '/model-training/advanced-mode/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/model-training/ease-mode'
    | '/dashboard'
    | '/model-training'
    | '/about'
    | '/voice-clone'
    | '/model-training/advanced-mode/step1'
    | '/model-training/advanced-mode/step2'
    | '/model-training/advanced-mode'
  id:
    | '__root__'
    | '/_layout'
    | '/_layout/model-training'
    | '/_layout/'
    | '/_layout/model-training/ease-mode'
    | '/_layout/model-training/advanced-mode'
    | '/_layout/dashboard/'
    | '/_layout/model-training/'
    | '/_layout/about/'
    | '/_layout/voice-clone/'
    | '/_layout/model-training/advanced-mode/step1'
    | '/_layout/model-training/advanced-mode/step2'
    | '/_layout/model-training/advanced-mode/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  LayoutRouteRoute: typeof LayoutRouteRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  LayoutRouteRoute: LayoutRouteRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_layout"
      ]
    },
    "/_layout": {
      "filePath": "_layout/route.tsx",
      "children": [
        "/_layout/model-training",
        "/_layout/",
        "/_layout/dashboard/",
        "/_layout/about/",
        "/_layout/voice-clone/"
      ]
    },
    "/_layout/model-training": {
      "filePath": "_layout/model-training/route.lazy.tsx",
      "parent": "/_layout",
      "children": [
        "/_layout/model-training/ease-mode",
        "/_layout/model-training/advanced-mode",
        "/_layout/model-training/"
      ]
    },
    "/_layout/": {
      "filePath": "_layout/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/model-training/ease-mode": {
      "filePath": "_layout/model-training/ease-mode.tsx",
      "parent": "/_layout/model-training"
    },
    "/_layout/model-training/advanced-mode": {
      "filePath": "_layout/model-training/advanced-mode/route.lazy.tsx",
      "parent": "/_layout/model-training",
      "children": [
        "/_layout/model-training/advanced-mode/step1",
        "/_layout/model-training/advanced-mode/step2",
        "/_layout/model-training/advanced-mode/"
      ]
    },
    "/_layout/dashboard/": {
      "filePath": "_layout/dashboard/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/model-training/": {
      "filePath": "_layout/model-training/index.tsx",
      "parent": "/_layout/model-training"
    },
    "/_layout/about/": {
      "filePath": "_layout/about/index.lazy.tsx",
      "parent": "/_layout"
    },
    "/_layout/voice-clone/": {
      "filePath": "_layout/voice-clone/index.lazy.tsx",
      "parent": "/_layout"
    },
    "/_layout/model-training/advanced-mode/step1": {
      "filePath": "_layout/model-training/advanced-mode/step1.tsx",
      "parent": "/_layout/model-training/advanced-mode"
    },
    "/_layout/model-training/advanced-mode/step2": {
      "filePath": "_layout/model-training/advanced-mode/step2.tsx",
      "parent": "/_layout/model-training/advanced-mode"
    },
    "/_layout/model-training/advanced-mode/": {
      "filePath": "_layout/model-training/advanced-mode/index.tsx",
      "parent": "/_layout/model-training/advanced-mode"
    }
  }
}
ROUTE_MANIFEST_END */
